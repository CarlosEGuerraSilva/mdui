:host {
  --shape-corner: var(--mdui-shape-corner-extra-large);
  --z-index: 2300;

  position: fixed;
  z-index: var(--z-index);
  display: none;
  align-items: center;
  justify-content: center;
  inset: 0;
  .padding(48);
}

::slotted(mdui-top-app-bar[slot="header"]) {
  position: absolute;
  // 这里如果使用 --shape-corner，则用的是在 mdui-top-app-bar 组件内定义的 --shape-corner
  // 期望使用 dialog 的 --shape-corner
  border-top-left-radius: var(--mdui-shape-corner-extra-large);
  border-top-right-radius: var(--mdui-shape-corner-extra-large);
  .background-color(surface-container-high);
}

:host([fullscreen]:not([fullscreen="false" i])) {
  --shape-corner: var(--mdui-shape-corner-none);

  padding: 0;

  ::slotted(mdui-top-app-bar[slot="header"]) {
    border-top-left-radius: var(--mdui-shape-corner-none);
    border-top-right-radius: var(--mdui-shape-corner-none);
  }
}

.overlay {
  position: fixed;
  inset: 0;
  .background-color(scrim, 0.4);
}

.panel {
  --mdui-color-background: var(--mdui-color-surface-container-high);

  position: relative;
  display: flex;
  flex-direction: column;
  max-height: 100%;
  border-radius: var(--shape-corner);
  outline: none;
  transform-origin: top;
  .min-width(280);
  .max-width(560);
  .padding(24);
  .background-color(surface-container-high);
  .elevation(3);

  :host([fullscreen]:not([fullscreen="false" i])) & {
    width: 100%;
    max-width: 100%;
    height: 100%;
    max-height: 100%;
    .elevation(0);
  }
}

.header {
  display: flex;
  flex-direction: column;

  .has-icon & {
    align-items: center;
  }
}

.icon {
  display: flex;
  .color(secondary);
  .font-size(24);
}

.icon mdui-icon,
::slotted([slot="icon"]) {
  font-size: inherit;
}

.headline {
  display: flex;
  .color(on-surface);
  .typescale(headline-small);

  .icon + & {
    .padding-top(16);
  }
}

.body {
  overflow: auto;

  .header + & {
    .margin-top(16);
  }
}

.description {
  display: flex;
  .color(on-surface-variant);
  .typescale(body-medium);

  :host([fullscreen]:not([fullscreen="false" i])) & {
    .color(on-surface);
  }

  .has-description.has-default & {
    .margin-bottom(16);
  }
}

.action {
  display: flex;
  justify-content: flex-end;
  .padding-top(24);

  &::slotted(:not(:first-child)) {
    .margin-left(8);
  }

  :host([stacked-actions]:not([stacked-actions="false" i])) & {
    flex-direction: column;
    align-items: end;

    &::slotted(:not(:first-child)) {
      .margin-left(0);
      .margin-top(8);
    }
  }
}
